// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	jwtgen "github.com/github.com/VadimOcLock/vauth/pkg/jwtgen"
	mock "github.com/stretchr/testify/mock"
)

// Creator is an autogenerated mock type for the Creator type
type Creator struct {
	mock.Mock
}

// CreateAccessToken provides a mock function with given fields: userID
func (_m *Creator) CreateAccessToken(userID string) (jwtgen.Token, error) {
	ret := _m.Called(userID)

	if len(ret) == 0 {
		panic("no return value specified for CreateAccessToken")
	}

	var r0 jwtgen.Token
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (jwtgen.Token, error)); ok {
		return rf(userID)
	}
	if rf, ok := ret.Get(0).(func(string) jwtgen.Token); ok {
		r0 = rf(userID)
	} else {
		r0 = ret.Get(0).(jwtgen.Token)
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(userID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateRefreshToken provides a mock function with given fields: userID
func (_m *Creator) CreateRefreshToken(userID string) (jwtgen.Token, error) {
	ret := _m.Called(userID)

	if len(ret) == 0 {
		panic("no return value specified for CreateRefreshToken")
	}

	var r0 jwtgen.Token
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (jwtgen.Token, error)); ok {
		return rf(userID)
	}
	if rf, ok := ret.Get(0).(func(string) jwtgen.Token); ok {
		r0 = rf(userID)
	} else {
		r0 = ret.Get(0).(jwtgen.Token)
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(userID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateResetToken provides a mock function with given fields: email
func (_m *Creator) CreateResetToken(email string) (jwtgen.Token, error) {
	ret := _m.Called(email)

	if len(ret) == 0 {
		panic("no return value specified for CreateResetToken")
	}

	var r0 jwtgen.Token
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (jwtgen.Token, error)); ok {
		return rf(email)
	}
	if rf, ok := ret.Get(0).(func(string) jwtgen.Token); ok {
		r0 = rf(email)
	} else {
		r0 = ret.Get(0).(jwtgen.Token)
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(email)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateVerifyToken provides a mock function with given fields: email
func (_m *Creator) CreateVerifyToken(email string) (jwtgen.Token, error) {
	ret := _m.Called(email)

	if len(ret) == 0 {
		panic("no return value specified for CreateVerifyToken")
	}

	var r0 jwtgen.Token
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (jwtgen.Token, error)); ok {
		return rf(email)
	}
	if rf, ok := ret.Get(0).(func(string) jwtgen.Token); ok {
		r0 = rf(email)
	} else {
		r0 = ret.Get(0).(jwtgen.Token)
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(email)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewCreator creates a new instance of Creator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCreator(t interface {
	mock.TestingT
	Cleanup(func())
}) *Creator {
	mock := &Creator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
